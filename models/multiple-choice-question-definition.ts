/*
Qualtrics Survey API

The Qualtrics Survey endpoints give you access to the structure of the surveys you create. 

Surveys have a complex structure, and you are encouraged to become familiar with the structure using your brand's Qualtrics page to build surveys at first. Then you can query those surveys using these endpoints. 

Once you are familiar, you can use this API to create surveys on the fly, or modify existing surveys in your library. 

The version of the OpenAPI document: 3.0.0


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/
import type * as buffer from "buffer"

import { Language } from './language';
import { QuestionChoicesValue } from './question-choices-value';
import { QuestionConfiguration } from './question-configuration';
import { Randomization } from './randomization';
import { Validation } from './validation';

/**
 * 
 * @export
 * @interface MultipleChoiceQuestionDefinition
 */
export interface MultipleChoiceQuestionDefinition {
    /**
     * The order the choices are to be displayed in.
     * @type {Array<string>}
     * @memberof MultipleChoiceQuestionDefinition
     */
    'ChoiceOrder': Array<string>;
    /**
     * Selections for a question
     * @type {{ [key: string]: QuestionChoicesValue; }}
     * @memberof MultipleChoiceQuestionDefinition
     */
    'Choices': { [key: string]: QuestionChoicesValue; };
    /**
     * 
     * @type {QuestionConfiguration}
     * @memberof MultipleChoiceQuestionDefinition
     */
    'Configuration': QuestionConfiguration;
    /**
     * The tag to identify the question in exported data.
     * @type {string}
     * @memberof MultipleChoiceQuestionDefinition
     */
    'DataExportTag'?: string;
    /**
     * 
     * @type {Language}
     * @memberof MultipleChoiceQuestionDefinition
     */
    'Language': Language;
    /**
     * 
     * @type {number}
     * @memberof MultipleChoiceQuestionDefinition
     */
    'NextAnswerId'?: number;
    /**
     * 
     * @type {number}
     * @memberof MultipleChoiceQuestionDefinition
     */
    'NextChoiceId'?: number;
    /**
     * Label to identify the question
     * @type {string}
     * @memberof MultipleChoiceQuestionDefinition
     */
    'QuestionDescription': string;
    /**
     * The unique identifier for the question.
     * @type {string}
     * @memberof MultipleChoiceQuestionDefinition
     */
    'QuestionID'?: string;
    /**
     * Text for the question.
     * @type {string}
     * @memberof MultipleChoiceQuestionDefinition
     */
    'QuestionText': string;
    /**
     * 
     * @type {string}
     * @memberof MultipleChoiceQuestionDefinition
     */
    'QuestionType': MultipleChoiceQuestionDefinitionQuestionTypeEnum;
    /**
     * 
     * @type {Randomization}
     * @memberof MultipleChoiceQuestionDefinition
     */
    'Randomization'?: Randomization;
    /**
     * Numeric mapping of question choices.
     * @type {{ [key: string]: string; }}
     * @memberof MultipleChoiceQuestionDefinition
     */
    'RecodeValues'?: { [key: string]: string; };
    /**
     * How answers are selected such as single answer, multiple answer, etc. One of `DL`, `GRB`, `MACOL`, `MAHR`, `MAVR`, `MSB`, `NPS`, `SACOL`, `SAHR`, `SAVR`, `SB`, `TB`, `TXOT`, `PTB`
     * @type {string}
     * @memberof MultipleChoiceQuestionDefinition
     */
    'Selector': MultipleChoiceQuestionDefinitionSelectorEnum;
    /**
     * 
     * @type {string}
     * @memberof MultipleChoiceQuestionDefinition
     */
    'SubSelector': MultipleChoiceQuestionDefinitionSubSelectorEnum;
    /**
     * 
     * @type {Validation}
     * @memberof MultipleChoiceQuestionDefinition
     */
    'Validation': Validation;
}

type MultipleChoiceQuestionDefinitionQuestionTypeEnum = 'MC'
type MultipleChoiceQuestionDefinitionSelectorEnum = 'DL' | 'GRB' | 'MACOL' | 'MAHR' | 'MAVR' | 'MSB' | 'NPS' | 'SACOL' | 'SAHR' | 'SAVR' | 'SB' | 'TB' | 'TXOT' | 'PTB'
type MultipleChoiceQuestionDefinitionSubSelectorEnum = 'GR' | 'TX' | 'TXOT' | 'WOTXB' | 'WTXB'


