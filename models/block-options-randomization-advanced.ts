/*
Qualtrics Survey API

The Qualtrics Survey endpoints give you access to the structure of the surveys you create. 

Surveys have a complex structure, and you are encouraged to become familiar with the structure using your brand's Qualtrics page to build surveys at first. Then you can query those surveys using these endpoints. 

Once you are familiar, you can use this API to create surveys on the fly, or modify existing surveys in your library. 

The version of the OpenAPI document: 3.0.0


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/
import type * as buffer from "buffer"

import { RandomizationElement } from './randomization-element';

/**
 * contains related configuartions for Randomization options
 * @export
 * @interface BlockOptionsRandomizationAdvanced
 */
export interface BlockOptionsRandomizationAdvanced {
    [key: string]: any;

    /**
     * Number of questions to display per page.
     * @type {string}
     * @memberof BlockOptionsRandomizationAdvanced
     */
    'QuestionsPerPage': string;
    /**
     * Questions to display in a fixed order
     * @type {Array<RandomizationElement>}
     * @memberof BlockOptionsRandomizationAdvanced
     */
    'FixedOrder'?: Array<RandomizationElement>;
    /**
     * Questions to display in a randomized order
     * @type {Array<RandomizationElement>}
     * @memberof BlockOptionsRandomizationAdvanced
     */
    'RandomizeAll'?: Array<RandomizationElement>;
    /**
     * Subset of questions to display in a randomized order
     * @type {Array<RandomizationElement>}
     * @memberof BlockOptionsRandomizationAdvanced
     */
    'RandomSubSet'?: Array<RandomizationElement>;
    /**
     * How many of the RandomSubSet questions to show in aggregate for a given respondent
     * @type {string}
     * @memberof BlockOptionsRandomizationAdvanced
     */
    'TotalRandSubset'?: string;
    /**
     * 
     * @type {Array<RandomizationElement>}
     * @memberof BlockOptionsRandomizationAdvanced
     */
    'Undisplayed'?: Array<RandomizationElement>;
}

